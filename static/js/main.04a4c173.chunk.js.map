{"version":3,"sources":["services/login.js","services/constants.js","components/Login.js","pages/PostsLists.js","pages/UsersList.js","services/posts.js","components/Posts.js","App.js","index.js"],"names":["loginUser","email","name","params","URLSearchParams","client_id","fetch","method","body","Login","setToken","useState","status","setStatus","setName","setEmail","handleSubmit","event","a","preventDefault","response","json","slToken","data","sl_token","className","onSubmit","htmlFor","type","value","onChange","target","required","PostsLists","userPosts","currentUserId","searchPosts","setSearchPosts","outputPosts","setOutputPosts","useEffect","posts","filter","post","message","toLocaleLowerCase","includes","onClick","sortedAsc","sort","post1","post2","Date","created_time","valueOf","sortedDesc","placeholder","map","toDateString","id","UsersList","users","changeCurrentUserId","searchUsers","setSearchUsers","outputUsers","setOutputUsers","user","userName","b","userId","length","getPosts","Posts","token","setUsers","setUserPosts","setCurrentUserId","run","incomingPosts","groupedPosts","reduce","acc","cur","from_id","from_name","previousPosts","allUserIds","Object","keys","allUsers","userInfo","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04a4c173.chunk.js","sourcesContent":["import { clientId, loginUri } from './constants'\n\nexport const loginUser = (email, name) => {\n  const params = new URLSearchParams({ email, name, client_id: clientId })\n  return fetch(loginUri, {\n    method: 'POST',\n    body: params,\n  })\n}\n","export const loginUri = 'https://api.supermetrics.com/assignment/register'\nexport const postsUri = 'https://api.supermetrics.com/assignment/posts'\nexport const clientId = 'ju16a6m81mhid5ue1z3v2g0uh'\n","import React, { useState } from \"react\";\nimport { loginUser } from \"../services/login\";\n\nconst Login = ({ setToken }) => {\n  const [status, setStatus] = useState(\"idle\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const handleNameChange = (event) => setName(event.target.value);\n  const handleEmailChange = (event) => setEmail(event.target.value);\n\n  const handleSubmit = async (event) => {\n    setStatus(\"pending\");\n    event.preventDefault();\n    try {\n      const response = await loginUser(email, name);\n      const json = await response.json();\n      //console.log(json);\n      const slToken = json.data.sl_token;\n      setToken(slToken);\n    } catch (error) {\n      setStatus(\"rejected\");\n    }\n  };\n\n  if (status === \"pending\") {\n    return \"Logging in . . .\";\n  }\n\n  if (status === \"rejected\") {\n    return \"Something went wrong\";\n  }\n\n  return (\n    <div className=\"login\">\n      <form onSubmit={handleSubmit} className=\"login_form\">\n        <h1>Login</h1>\n        <div className=\"login_field\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={handleNameChange}\n            required\n          />\n        </div>\n        <div className=\"login_field\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={handleEmailChange}\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"login_button\">\n          Go\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\n\nconst PostsLists = ({ userPosts, currentUserId }) => {\n  const [searchPosts, setSearchPosts] = useState(\"\");\n  const [outputPosts, setOutputPosts] = useState([]);\n\n  const searchHandler = (event) => {\n    setSearchPosts(event.target.value);\n    //console.log(event.target.value);\n  };\n\n  useEffect(() => {\n    setOutputPosts(\n      userPosts[currentUserId]?.posts.filter((post) =>\n        post.message\n          .toLocaleLowerCase()\n          .includes(searchPosts.toLocaleLowerCase())\n      )\n    );\n  }, [searchPosts, currentUserId, userPosts]);\n\n  const sortAsc = () => {\n    const sortedAsc = userPosts[currentUserId].posts.sort((post1, post2) => {\n      const post1Time = new Date(post1.created_time).valueOf();\n      const post2Time = new Date(post2.created_time).valueOf();\n      return post1Time < post2Time ? 1 : -1;\n    });\n\n    setOutputPosts([...sortedAsc]);\n  };\n\n  const sortDesc = () => {\n    const sortedDesc = userPosts[currentUserId].posts.sort((post1, post2) => {\n      const post1Time = new Date(post1.created_time).valueOf();\n      const post2Time = new Date(post2.created_time).valueOf();\n      return post1Time > post2Time ? 1 : -1;\n    });\n\n    setOutputPosts([...sortedDesc]);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"right_box\">\n        <div className=\"top_bar\">\n          <div>\n            <button onClick={sortAsc}>\n              <i className=\"fa fa-toggle-up\"></i>\n            </button>\n            <button onClick={sortDesc}>\n              <i className=\"fa fa-toggle-down\"></i>\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            placeholder=\"Search Posts...\"\n            onChange={searchHandler}\n          />\n        </div>\n        <div className=\"posts_lists\">\n          {outputPosts.map((post) => (\n            <ul key={post.id}>\n              <li>{new Date(post.created_time).toDateString()}</li>\n              <li>{post.message}</li>\n            </ul>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostsLists;\n","import React, { useEffect, useState } from \"react\";\n\nconst UsersList = ({\n  users,\n  changeCurrentUserId,\n  currentUserId,\n  userPosts,\n}) => {\n  const [searchUsers, setSearchUsers] = useState(\"\");\n  const [outputUsers, setOutputUsers] = useState([]);\n\n  const searchHandler = (event) => {\n    setSearchUsers(event.target.value);\n    //console.log(event.target.value);\n  };\n\n  useEffect(() => {\n    setOutputUsers(\n      users?.filter((user) =>\n        user.userName\n          .toLocaleLowerCase()\n          .includes(searchUsers.toLocaleLowerCase())\n      )\n    );\n  }, [searchUsers, users]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"left_box\">\n        <input\n          type=\"text\"\n          placeholder=\"Search Users...\"\n          onChange={searchHandler}\n        />\n        <ul>\n          {outputUsers\n            ?.sort((a, b) => (a.userName > b.userName ? 1 : -1))\n            .map((user) => {\n              return (\n                <li key={user.userId}>\n                  <button\n                    onClick={changeCurrentUserId(user.userId)}\n                    className={currentUserId === user.userId ? \"active\" : \"\"}\n                  >\n                    {user.userName}\n                    {\"\\n\"}\n                    <span>{userPosts[user.userId]?.posts?.length}</span>\n                  </button>\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default UsersList;\n","import { postsUri } from \"./constants\";\n\nexport const getPosts = async (sl_token) => {\n  return await fetch(`${postsUri}?sl_token=${sl_token}`);\n};\n","import { useEffect, useState } from \"react\";\nimport PostsLists from \"../pages/PostsLists\";\nimport UsersList from \"../pages/UsersList\";\nimport { getPosts } from \"../services/posts\";\n\nconst Posts = ({ token }) => {\n  const [status, setStatus] = useState(\"idle\");\n  const [users, setUsers] = useState([]);\n  const [userPosts, setUserPosts] = useState([]);\n  const [currentUserId, setCurrentUserId] = useState(\"user_0\");\n  const changeCurrentUserId = (userId) => () => setCurrentUserId(userId);\n\n  useEffect(() => {\n    const run = async () => {\n      setStatus(\"pending\");\n      const response = await getPosts(token);\n      const json = await response.json();\n      const incomingPosts = json.data.posts;\n\n      /** This function groups posts of users by user id */\n      const groupedPosts = incomingPosts.reduce((acc, cur) => {\n        const { from_id, from_name, ...post } = cur;\n        const previousPosts = acc[cur.from_id]?.posts || [];\n        acc[cur.from_id] = {\n          from_id,\n          from_name,\n          posts: [...previousPosts, post],\n        };\n        return acc;\n      }, {});\n\n      /* Extract user related information from grouped user posts  */\n      const allUserIds = Object.keys(groupedPosts);\n      const allUsers = allUserIds.reduce((acc, userId) => {\n        const userInfo = {\n          userId,\n          userName: groupedPosts[userId].from_name,\n        };\n        acc = [...acc, userInfo];\n        return acc;\n      }, []);\n\n      setUserPosts(groupedPosts);\n      setUsers(allUsers);\n      setStatus(\"idle\");\n    };\n    run();\n  }, [token]);\n\n  if (status === \"pending\") {\n    return \"Fetching posts . . .\";\n  }\n\n  return (\n    <div>\n      <UsersList\n        users={users}\n        changeCurrentUserId={changeCurrentUserId}\n        currentUserId={currentUserId}\n        userPosts={userPosts}\n      />\n      <PostsLists userPosts={userPosts} currentUserId={currentUserId} />\n    </div>\n  );\n};\n\nexport default Posts;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport Posts from \"./components/Posts\";\n\nfunction App() {\n  const [token, setToken] = useState(\"\");\n\n  return (\n    <div>\n      {!token ? <Login setToken={setToken} /> : <Posts token={token} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}